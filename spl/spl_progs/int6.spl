alias counter S0;
alias physicalSP S1;
physicalSP=[PTBR+2*(SP/512)]*512+SP%512;
alias syscallno S2;
syscallno=[physicalSP-1];
alias curPID S3;
alias filename S4;
filename=[physicalSP-3];
curPID=(PTBR-1024)/8;
alias curPCB S5;
curPCB=READY_LIST+32*curPID;
alias bbno S6;
alias count1 S7;
alias count2 S8;
alias count3 S9;
alias count S10;
alias dbno S11;
alias filetableindex S12;
alias stacknumber S13;
alias parPID S14;

if(syscallno==9) then

	//search for file

	counter=0;
	while(counter<64) do
		if([FAT+8*counter]==filename) then
			bbno=[FAT+8*counter+2];
			break;
		endif;
		counter=counter+1;
	endwhile;
	if(counter==64) then
		print "~ file";
		[physicalSP-2]=-1;
		ireturn;
	endif;
	load(1,bbno);
	// go through the basic block
	counter=0;
	load(6,20);
	while(counter<3) do
	//reduce the mem_list and disk_list of the process to be swapped out 
		if([PTBR+2*counter+1]=="01" || [PTBR+2*counter+1]=="11") then
			[MEM_LIST+[PTBR+2*counter]]=[MEM_LIST+[PTBR+2*counter]]-1;
		endif;
		if([PTBR+2*counter]>=448&&([PTBR+2*counter+1]=="00" || [PTBR+2*counter+1]=="10")) then	
			[DISK_LIST+[PTBR+2*counter]]=[DISK_LIST+[PTBR+2*counter]]-1;
		endif;
	//update the per process page table for the new process
		if([SCRATCHPAD+counter]!=-1&&[SCRATCHPAD+counter]!="") then
			[PTBR+2*counter]=[SCRATCHPAD+counter];
			[PTBR+2*counter+1]="00";
		else
			[PTBR+2*counter]=-1;
			[PTBR+2*counter+1]="00";
		endif;
		counter=counter+1;
	endwhile;
	store(6,20);

	stacknumber=[PTBR+6];
	[PTBR+7]="01";

	//breakpoint;
	//closing all the files
	counter=15;

	while(counter<31) do
		if([curPCB+counter]!=-1) then
			filetableindex=[curPCB+counter];
			[FILE_TABLE+filetableindex+1]=[FILE_TABLE+filetableindex+1]-1;
			if([FILE_TABLE+filetableindex+1]==0) then
				[FILE_TABLE+filetableindex]=-1;
			endif;

			[curPCB+counter]=-1;
			[curPCB+counter+1]=0;
		endif;
			counter=counter+2;
	endwhile;
	store(5,19);
	store(6,20);
	SP=3*512;
	[stacknumber*512]=0;
	//breakpoint;
	print "exec success";
	ireturn;
else
	if(syscallno==11) then
		if(curPID<0 && curPID>=32) then
			[physicalSP-2]=-1;
			ireturn;
		endif;
		[physicalSP-2]=curPID;
		ireturn;
	else
		if(syscallno==12) then
			parPID=[curPCB+31];
			if(parPID<0 && parPID>=32) then
			[physicalSP-2]=-1;
			ireturn;
			endif;
		[physicalSP-2]=parPID;
		ireturn;
		endif;
	endif;						
endif;
